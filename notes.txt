### boot (from host)
qemu-img create -f qcow2 alpine.qcow2 8G
qemu-system-x86_64 -m 512 -nic user -boot d -cdrom alpine-3.3.0-x86_64.iso -hda alpine.qcow2 -enable-kvm

### install system (from guest)
setup-alpine
#during install select sda as disk and sys as type

### launch installed system (from host)
qemu-system-x86_64 -m 512 -enable-kvm -nic user,hostfwd=tcp::10022-:22 -hda alpine.qcow2 -smp $(nproc)

### enable root login (from guest)
echo -e "PermitRootLogin yes\nPermitEmptyPasswords yes" >> /etc/ssh/sshd_config
rc-service sshd restart

### connect (from host)
ssh root@localhost -p 10022

### stuff to run inside the ssh session
#### get tpc deps
apk add postgresql git build-base
git clone https://github.com/tpc-h/tpc-h.git
cd tpc-h/2.18.0_rc2/dbgen
cp makefile.suite Makefile
sed -i 's/CC      = /CC = gcc/' Makefile
sed -i 's/DATABASE=/DATABASE= ORACLE/' Makefile
sed -i 's/MACHINE =/MACHINE = LINUX/' Makefile
sed -i 's/WORKLOAD =/WORKLOAD = TPCH/' Makefile
make $(nproc)

#### load data
./dbgen -vf
rc-service postgresql start
createdb -U postgres tpch
psql -U postgres tpch -f dss.ddl
for i in `ls *.tbl`; do
  table=${i/.tbl/}
  echo "Loading $table..."
  sed 's/|$//' $i > /tmp/$i
  psql -U postgres tpch -q -c "TRUNCATE $table"
  psql -U postgres tpch -c "\\copy $table FROM '/tmp/$i' CSV DELIMITER '|'"
done

#### prepare tpch queries (run query 18 only)
rm -rf q18 && mkdir q18 
for i in $(seq 1 22); do
  touch q18/${i}.sql
done
sed '$ d' queries/18.sql > q18/18.sql
#for trailing ; #tac queries/18.sql | sed '2s/;//' | tac > q18/18.sql 
DSS_QUERY=q18 ./qgen | sed 's/day (3)/day/' > finalq18.sql

#### run the query
time psql -U postgres tpch < finalq18.sql


#### kernel compile on arch (host)
mkdir compile_demo && cd compile_demo
wget http://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.1.52.tar.xz 
unxz linux-4.1.52.tar.xz && tar -xf linux-4.1.52.tar
mv linux-4.1.52 linux-4.1.vanilla
cd linux-4.1.vanilla
cp /boot/config-grsec .config
apk add coreutils bison flex openssl-dev linux-headers libelf-dev bc perl
yes "" | make oldconfig
yes "" | make -j $(nproc)
cd .. && tar czf linux-4.1.vanilla.tgz linux-4.1.vanilla
scp -P 10022 linux-4.1.vanilla.tgz root@localhost:/root

##### install kernel on alpine (in guest)
cd /root
tar xzf linux-4.1.vanilla.tgz
cd linux-4.1.vanilla
make modules_install
cp arch/x86/boot/bzImage /boot/vmlinuz-linux41-vanilla
mkinitfs 4.1.52
mv /boot/initramfs-vanilla /boot/initramfs-linux41-vanilla
update-extlinux #adds to boot menu

### patch application (from host)
cd .. #to compile_demo directory
cp -R -p linux-4.1.vanilla linux-4.1.overload-on-wakeup
wget https://raw.githubusercontent.com/jplozi/wastedcores/master/patches/overload_on_wakeup_linux_4.1.patch
patch -u linux-4.1.overload-on-wakeup/kernel/sched/fair.c overload_on_wakeup_linux_4.1.patch
cd linux-4.1.overload-on-wakeup
make -j $(nproc)
cd .. && tar czf linux-4.1.overload-on-wakeup.tgz linux-4.1.overload-on-wakeup
scp -P 10022 linux-4.1.overload-on-wakeup.tgz root@localhost:/root

### difficulties:
-hardware is not cheap or easy to find (eg rasp pi)
-no system dump to replicate
	-finding a distro with kernel 4.1
	-no mention of the db used
	-what is the 18th query? Many different scale factors
